// THIS FILE IS AUTOGENERATED DO NOT EDIT BY HAND
using System;
using System.Text.Json;
using System.Text.Json.Serialization;
using System.Drawing;
using Mutagen.Bethesda.Skyrim;
using Spriggan.Converters.Base;
using Mutagen.Bethesda;
using Mutagen.Bethesda.Strings;
using Microsoft.Extensions.DependencyInjection;
using Mutagen.Bethesda.Plugins.Records;
using System.Globalization;
using Mutagen.Bethesda.Plugins;
using Noggog;

internal static class FunctionConditionData_Writer
{
    public static void WriteInner(Utf8JsonWriter writer, Mutagen.Bethesda.Skyrim.IFunctionConditionDataGetter? value, JsonSerializerOptions options)
    {
        if (value == null)
        {
            writer.WriteStartObject();
            
            // Function
            writer.WritePropertyName("Function");
            writer.WriteEnum(value.Function);
            
            // Unknown2
            writer.WritePropertyName("Unknown2");
            writer.WriteNumberValue((uint)value.Unknown2);
            
            // ParameterOneRecord
            writer.WritePropertyName("ParameterOneRecord");
            writer.WriteStringValue(value.ParameterOneRecord.FormKey.ToString());
            
            // ParameterOneNumber
            writer.WritePropertyName("ParameterOneNumber");
            writer.WriteNumberValue(value.ParameterOneNumber);
            
            // ParameterOneString
            writer.WritePropertyName("ParameterOneString");
            writer.WriteStringValue(value.ParameterOneString);
            
            // ParameterTwoRecord
            writer.WritePropertyName("ParameterTwoRecord");
            writer.WriteStringValue(value.ParameterTwoRecord.FormKey.ToString());
            
            // ParameterTwoNumber
            writer.WritePropertyName("ParameterTwoNumber");
            writer.WriteNumberValue(value.ParameterTwoNumber);
            
            // ParameterTwoString
            writer.WritePropertyName("ParameterTwoString");
            writer.WriteStringValue(value.ParameterTwoString);
            
            // RunOnType
            writer.WritePropertyName("RunOnType");
            writer.WriteEnum(value.RunOnType);
            
            // Reference
            writer.WritePropertyName("Reference");
            writer.WriteStringValue(value.Reference.FormKey.ToString());
            
            // Unknown3
            writer.WritePropertyName("Unknown3");
            writer.WriteNumberValue(value.Unknown3);
            writer.WriteEndObject();
        }
        else
        {
            writer.WriteNullValue();
        }
    }
}
