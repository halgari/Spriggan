// THIS FILE IS AUTOGENERATED DO NOT EDIT BY HAND
using System;
using System.Text.Json;
using System.Text.Json.Serialization;
using System.Drawing;
using Mutagen.Bethesda.Skyrim;
using Spriggan.Converters.Base;
using Mutagen.Bethesda;
using Mutagen.Bethesda.Strings;
using Microsoft.Extensions.DependencyInjection;
using Mutagen.Bethesda.Plugins.Records;
using System.Globalization;
using Mutagen.Bethesda.Plugins;
using Noggog;

internal static class IScriptPropertyGetter_Writer
{
    public static void WriteOuter(Utf8JsonWriter writer, Mutagen.Bethesda.Skyrim.IScriptPropertyGetter? value, JsonSerializerOptions options)
    {
        if (value == null)
        {
            writer.WriteStartObject();
            switch (value)
            {
                case Mutagen.Bethesda.Skyrim.IScriptObjectPropertyGetter itm1:
                    writer.WriteString("$type", "ScriptObjectProperty");
                    ScriptObjectProperty_Writer.WriteInner(writer, itm1, options);
                    break;
                case Mutagen.Bethesda.Skyrim.IScriptStringPropertyGetter itm2:
                    writer.WriteString("$type", "ScriptStringProperty");
                    ScriptStringProperty_Writer.WriteInner(writer, itm2, options);
                    break;
                case Mutagen.Bethesda.Skyrim.IScriptIntPropertyGetter itm3:
                    writer.WriteString("$type", "ScriptIntProperty");
                    ScriptIntProperty_Writer.WriteInner(writer, itm3, options);
                    break;
                case Mutagen.Bethesda.Skyrim.IScriptFloatPropertyGetter itm4:
                    writer.WriteString("$type", "ScriptFloatProperty");
                    ScriptFloatProperty_Writer.WriteInner(writer, itm4, options);
                    break;
                case Mutagen.Bethesda.Skyrim.IScriptBoolPropertyGetter itm5:
                    writer.WriteString("$type", "ScriptBoolProperty");
                    ScriptBoolProperty_Writer.WriteInner(writer, itm5, options);
                    break;
                case Mutagen.Bethesda.Skyrim.IScriptObjectListPropertyGetter itm6:
                    writer.WriteString("$type", "ScriptObjectListProperty");
                    ScriptObjectListProperty_Writer.WriteInner(writer, itm6, options);
                    break;
                case Mutagen.Bethesda.Skyrim.IScriptIntListPropertyGetter itm7:
                    writer.WriteString("$type", "ScriptIntListProperty");
                    ScriptIntListProperty_Writer.WriteInner(writer, itm7, options);
                    break;
                case Mutagen.Bethesda.Skyrim.IScriptFloatListPropertyGetter itm8:
                    writer.WriteString("$type", "ScriptFloatListProperty");
                    ScriptFloatListProperty_Writer.WriteInner(writer, itm8, options);
                    break;
                case Mutagen.Bethesda.Skyrim.IScriptBoolListPropertyGetter itm9:
                    writer.WriteString("$type", "ScriptBoolListProperty");
                    ScriptBoolListProperty_Writer.WriteInner(writer, itm9, options);
                    break;
                case Mutagen.Bethesda.Skyrim.IScriptStringListPropertyGetter itm10:
                    writer.WriteString("$type", "ScriptStringListProperty");
                    ScriptStringListProperty_Writer.WriteInner(writer, itm10, options);
                    break;
            }
            writer.WriteEndObject();
        }
        else
        {
            writer.WriteNullValue();
        }
    }
}
